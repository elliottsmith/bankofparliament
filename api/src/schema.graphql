# base entities
type Entity {
	entityId: ID!
	name: String
	opencorporates_registration: String
	findthatcharity_registration: String
	address: String
	date_of_birth: String
	email: String
	twitter: String
	facebook: String
	linkedin: String
}

type Relationship {
	relationshipId: ID!
	amount: Int
	date: String
	link: String
	text: String
	source: Entity @cypher(statement: "MATCH (a)-[this]->() RETURN a")
	target: Entity @cypher(statement: "MATCH ()-[this]->(b) RETURN b")
	type: String @cypher(statement: "RETURN type(this)")
}

# human entities
type person {
	name: String!
	opencorporates_registration: String
	address: String
	date_of_birth: String
	email: String
	twitter: String
	facebook: String
	linkedin: String
	total_salary: Int @cypher(statement: """MATCH (this)-[r:employed_by]->() RETURN SUM(toInteger(r.amount))""")
	total_shareholdings: Int @cypher(statement: """MATCH (this)-[r:shareholder_of]->() RETURN COUNT(r)""")
	relations: [person] @relation(name: "related_to", direction: "OUT")
}

type advisor {
	name: String!
	opencorporates_registration: String
	address: String
	date_of_birth: String
	email: String
	twitter: String
	facebook: String
	linkedin: String
	total_salary: Int @cypher(statement: """MATCH (this)-[r:employed_by]->() RETURN SUM(toInteger(r.amount))""")
	total_shareholdings: Int @cypher(statement: """MATCH (this)-[r:shareholder_of]->() RETURN COUNT(r)""")
	relations: [person] @relation(name: "related_to", direction: "OUT")
}

type politician {
	name: String!
	opencorporates_registration: String
	address: String
	date_of_birth: String
	email: String
	twitter: String
	facebook: String
	linkedin: String
	party: political_party @relation(name: "member_of", direction: "OUT")
	total_salary: Int @cypher(statement: """MATCH (this)-[r:employed_by]->() RETURN SUM(toInteger(r.amount))""")
	total_freebies: Int @cypher(statement: """MATCH (this)-[r]->() WHERE type(r) in ['donation_from', 'gift_from', 'visited'] RETURN SUM(toInteger(r.amount))""")
	total_properties: Int @cypher(statement: """MATCH (this)-[r:owner_of]->() RETURN COUNT(r)""")
	total_shareholdings: Int @cypher(statement: """MATCH (this)-[r:shareholder_of]->() RETURN COUNT(r)""")
	relations: [person] @relation(name: "related_to", direction: "OUT")
}

# non human entities
type organisation {
	name: String!
	opencorporates_registration: String
	findthatcharity_registration: String
	address: String
	email: String
	twitter: String
	facebook: String
	linkedin: String
	type: String @cypher(statement: "RETURN labels(this)[0]")
}

type state_power {
	name: String!
}

type local_authority {
	name: String!
}

type foreign_government {
	name: String!
}

type government_organisation {
	name: String!
}

type house_of_parliament {
	name: String!
}

type political_party {
	name: String!
}

type political {
	name: String!
}

type pollster {
	name: String!
	opencorporates_registration: String
}

type think_lobby {
	name: String!
	opencorporates_registration: String
}

type company {
	name: String!
	opencorporates_registration: String
	total_shareholders: Int @cypher(statement: """MATCH (this)<-[r:shareholder_of]-(e) RETURN COUNT(e)""")
	shareholders: [person] @relation(name: "shareholder_of", direction: "IN")
}

type association {
	name: String!
}

type charity {
	name: String!
}

type union {
	name: String!
}

type university {
	name: String!
}

type media {
	name: String!
	opencorporates_registration: String
}

type misc {
	name: String!
	opencorporates_registration: String
}

type sport {
	name: String!
	opencorporates_registration: String
}

type education {
	name: String!
	opencorporates_registration: String
}

type health {
	name: String!
	opencorporates_registration: String
}

type property {
	name: String!
}

type profession {
	name: String!
}

type employer {
	name: String!
	opencorporates_registration: String
	total_salaries: Int @cypher(statement: """MATCH (this)-[r:employed_by]-() RETURN SUM(toInteger(r.amount))""")
}
type donor {
	name: String!
	opencorporates_registration: String
	total_donations: Int @cypher(statement: """MATCH (this)-[r]-() WHERE type(r) in ['donation_from', 'gift_from', 'visited'] RETURN SUM(toInteger(r.amount))""")
}

type Query {
	# base types
	getEntities: [Entity] @cypher(statement: "MATCH (e) RETURN e")
	getEntityByName(name: String): [Entity] @cypher(statement: "MATCH (e) WHERE toLower(e.name) CONTAINS toLower($name) RETURN e")
	getEntityById(id: Int): [Entity] @cypher(statement: "MATCH (e) WHERE ID(e) = $id RETURN e")
	getRelationships: [Relationship] @cypher(statement: "MATCH ()-[r]-() RETURN r")

	# counters
	getEntityCount: Int! @cypher(statement: "MATCH (e) RETURN COUNT(e)")
	getRelationshipCount: Int! @cypher(statement: "MATCH ()-[r]->() RETURN COUNT(r)")
	getPeopleCount: Int! @cypher(statement: "MATCH (e:person) RETURN COUNT(e)")
	getOrganisationsCount: Int! @cypher(statement: "MATCH (e:organisation) RETURN COUNT(e)")
	getTotalRelationshipValue: Int @cypher(statement: "MATCH ()-[r]->() RETURN SUM(toInteger(r.amount))")

	# labels / entity types
	# human
	getPeople: [person] @cypher(statement: "MATCH (e:person) RETURN e")
	getPoliticians: [politician] @cypher(statement: "MATCH (e:politician) RETURN e")
	getAdvisors: [advisor] @cypher(statement: "MATCH (e:advisor) RETURN e")

	# organisations
	getOrganisations: [organisation] @cypher(statement: "MATCH (e:organisation) RETURN e")
	getStatePowers: [state_power] @cypher(statement: "MATCH (e:state_power) RETURN e")
	getLocalAuthorities: [local_authority] @cypher(statement: "MATCH (e:local_authority) RETURN e")
	getForeignGovernments: [foreign_government] @cypher(statement: "MATCH (e:foreign_government) RETURN e")
	getGovernmentOrganisations: [government_organisation] @cypher(statement: "MATCH (e:government_organisation) RETURN e")
	getHousesOfParliament: [house_of_parliament] @cypher(statement: "MATCH (e:house_of_parliament) RETURN e")
	getPoliticalParties: [political_party] @cypher(statement: "MATCH (e:political_party) RETURN e")
	getPoliticalOrganisations: [political] @cypher(statement: "MATCH (e:political) RETURN e")
	getPollsters: [pollster] @cypher(statement: "MATCH (e:pollster) RETURN e")
	getThinkTanks: [think_lobby] @cypher(statement: "MATCH (e:think_lobby) RETURN e")
	getCompanies: [company] @cypher(statement: "MATCH (e:company) RETURN e")
	getAssociations: [association] @cypher(statement: "MATCH (e:association) RETURN e")
	getCharities: [charity] @cypher(statement: "MATCH (e:charity) RETURN e")
	getTradeUnions: [union] @cypher(statement: "MATCH (e:union) RETURN e")
	getUniversities: [university] @cypher(statement: "MATCH (e:university) RETURN e")
	getMedia: [media] @cypher(statement: "MATCH (e:media) RETURN e")
	getMisc: [misc] @cypher(statement: "MATCH (e:misc) RETURN e")
	getSports: [sport] @cypher(statement: "MATCH (e:sport) RETURN e")
	getEducation: [education] @cypher(statement: "MATCH (e:education) RETURN e")
	getHealthcare: [health] @cypher(statement: "MATCH (e:health) RETURN e")

	# misc
	getProperties: [property] @cypher(statement: "MATCH (e:property) RETURN e")
	getProfessions: [profession] @cypher(statement: "MATCH (e:profession) RETURN e")

	# entities by relationship type
	getEmployers: [employer] @cypher(statement: "MATCH ()-[r:employed_by]->(e) RETURN distinct e")
	getDonors: [donor] @cypher(statement: "MATCH ()-[r]->(e) WHERE type(r) in ['donation_from', 'gift_from', 'visited'] RETURN distinct e")
	getPropertyOwners: [person] @cypher(statement: "MATCH (e)-[r:owner_of]-() RETURN distinct e")
	getShareholders: [person] @cypher(statement: "MATCH (p)-[r:shareholder_of]->(e:company) RETURN distinct p")
	getShareholdings: [company] @cypher(statement: "MATCH (e)<-[r:shareholder_of]-() RETURN distinct e")

	# top 5 queries
	getTopSalary: [politician] @cypher(statement: "MATCH (p:politician)-[r:employed_by]->(o) RETURN p, sum(r.amount) as amount ORDER BY amount desc LIMIT 5")
	getTopDonationsReceived: [politician] @cypher(statement: "MATCH (p:politician)-[r:donation_from]->(o) RETURN p, sum(r.amount) as amount ORDER BY amount desc LIMIT 5")
	getTopPropertyOwners: [politician] @cypher(statement: "MATCH (p:politician)-[r:owner_of]->() RETURN p, count(r.amount) as amount ORDER BY amount desc LIMIT 5")
	getTopShareholders: [politician] @cypher(statement: "MATCH (p:politician)-[r:shareholder_of]->() RETURN p, count(r) as amount ORDER BY amount desc LIMIT 5")

	getTopDonors: [donor] @cypher(statement: "MATCH (p:politician)-[r:donation_from]->(o) RETURN o, sum(r.amount) as amount ORDER BY amount desc LIMIT 5")
	getTopEmployers: [employer] @cypher(statement: "MATCH ()-[r:employed_by]->(o) RETURN o, sum(r.amount) as amount ORDER BY amount desc LIMIT 5")
	getTopShareholdings: [company] @cypher(statement: "MATCH ()-[r:shareholder_of]->(o) RETURN o, COUNT(r) as count ORDER BY count desc LIMIT 5")

}
